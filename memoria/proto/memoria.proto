syntax = "proto3";

package memoria;

service LobbyService {
  rpc RegisterToLobby (Empty)         returns (stream LobbyReply)     {}
  rpc CreateGame      (CreateRequest) returns (Empty)                 {}
  rpc JoinGame        (JoinRequest)   returns (stream GameStateReply) {}
}

service GameService {
  rpc RejoinGame     (RejoinRequest)  returns (stream GameStateReply) {}
  rpc MakeMove       (RevealRequest)  returns (Empty)                 {}
}

message Empty {}

message LobbyReply {
  uint32 id = 1;
  uint32 width = 2;
  uint32 height = 3;
  uint32 connected = 4;
  uint32 player_cap = 5;
}

message CreateRequest {
  uint32 width = 1;
  uint32 height = 2;
  uint32 player_cap = 3;
}

message JoinRequest {
  uint32 id = 1;
}

message RejoinRequest {
  uint32 id = 1;
  string player = 2;
}

message KeyAssignment {
  uint32 player_id  = 1;
  string player_key = 2;
}

message ConnectionUpdate {
  uint32 connected = 1;
  uint32 player_cap = 2;
}

message PlayerMove {
  uint32 revealX = 1;
  uint32 revealY = 2;
}

message NextPlayer {
  uint32 player_id = 1;
}

message GameStateReply {
  oneof value {
    KeyAssignment    key_assignment    = 1;
    ConnectionUpdate connection_update = 2;
    NextPlayer       next_player       = 3;
    PlayerMove       player_revealed   = 4;
  }
}

message RevealRequest {
  uint32 id         = 1;
  string player_key = 2;
  PlayerMove p_move = 3;
}

