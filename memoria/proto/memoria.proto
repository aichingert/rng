syntax = "proto3";

package memoria;

service LobbyService {
  rpc RegisterToLobby (Empty)         returns (stream LobbyReply)     {}
  rpc CreateGame      (CreateRequest) returns (Empty)                 {}
  rpc JoinGame        (JoinRequest)   returns (stream GameStateReply) {}
}

service GameService {
  rpc RejoinGame     (RejoinRequest)  returns (stream GameStateReply) {}
  rpc MakeMove       (RevealRequest)  returns (Empty)                 {}
}

message Empty {}

message LobbyReply {
  uint32 id = 1;
  uint32 pairs = 2;
  uint32 connected = 3;
  uint32 player_cap = 4;
}

message CreateRequest {
  uint32 pairs = 1;
  uint32 player_cap = 2;
}

message JoinRequest {
  uint32 id = 1;
}

message RejoinRequest {
  uint32 id = 1;
  uint32 player = 2;
}

message BoardState {
  uint32 pairs            = 1;
  repeated uint32 indexes = 2;
}

message BoardValue {
  uint32 pos = 1;
  uint32 val = 2;
}

message CloseCards {
  uint32 one = 1;
  uint32 two = 2;
}

message KeyAssignment {
  uint32 player_id  = 1;
  BoardState state  = 2;
}

message ConnectionUpdate {
  uint32 connected = 1;
  uint32 player_cap = 2;
}

message NextPlayer {
  uint32 player_id = 1;
}

message GameStateReply {
  oneof value {
    KeyAssignment    key_assignment    = 1;
    ConnectionUpdate connection_update = 2;
    NextPlayer       next_player       = 3;
    CloseCards       close_revealed    = 4;
    CloseCards       remove_revealed   = 5;
    BoardValue       player_revealed   = 6;
    BoardState       current_board     = 7;
  }
}

message RevealRequest {
  uint32 id        = 1;
  uint32 pos       = 2;
  uint32 player_id = 3;
}

